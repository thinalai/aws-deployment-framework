# // Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# // SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: "2010-09-09"
Description: ADF CloudFormation Template (Global) for IAM in the Deployment Account

Parameters:
  # OrgStage can be set in the respective adfconfig file using the 
  # path config.org.stage
  OrgStage:
    Type: "AWS::SSM::Parameter::Value<String>"
    Description: A stage used to differentiate Multi-Organization ADF environments
    Default: /adf/org/stage

# Org StageCustom Mappings allows you to dynamically build different IAM 
# Conditions / Principals ARN / Resource ARN per Organization applying Least 
# Privilege Principals whilst retaining a Single Stack Definition for all
# environments.
# Usage: !FindInMap[OrgStageMap: !Ref OrgStage, ExampleCustomProperty]
Mappings:
  OrgStageMap:
    Dev:
      ExampleCustomProperty: 1234
    Int:
      ExampleCustomProperty: 5678
    Prod:
      ExampleCustomProperty: 9102

Resources:
  CloudFormationDeploymentPolicy:
    # This is the policy that will be used to deploy CloudFormation resources from
    # within the target account. You should scope this policy depending
    # On what you would like to deploy within certain Organizational Units.
    # NOTE: below is a sample IAM policy. This policies should NOT be used
    # for purposes other than testing.
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "custom-adf-cloudformation-deployment-role-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Sid: "CloudFormation"
            Action:
              # These are examples, please update these to the least privilege policy required:
              - "s3:*"
              - "ecr:*"
            Resource:
              - "*"
      Roles:
        - adf-cloudformation-deployment-role

##
# Begin of Terraform resources
##
# ADFTerraformRole:
#   # This is the role that will be used to deploy Terraform resources from within
#   # the target account. You should scope this policy depending on what you would
#   # like to deploy within certain Organizational Units.
#   # NOTE: below is a sample IAM policy. This policies should NOT be used for purposes other than testing.
#   # Uncomment the `ADFTerraformRole` and `ADFTerraformPolicy` resources if you want to enable Terraform support in ADF
#   # and deploy resources in Deployment account using Terraform. If you need to push to other account, you don't need to
#   # add this policy
#   Type: AWS::IAM::Role
#   Properties:
#     RoleName: "adf-terraform-role"
#     AssumeRolePolicyDocument:
#       Version: "2012-10-17"
#       Statement:
#         - Effect: Allow
#           Sid: "AssumeRole"
#           Principal:
#             AWS:
#               - !Sub arn:aws-cn:iam::${AWS::AccountId}:role/adf-codebuild-role
#           Action:
#             - sts:AssumeRole
#     Path: /
# ADFTerraformPolicy:
#   Type: AWS::IAM::Policy
#   Properties:
#     PolicyName: "adf-terraform-policy"
#     PolicyDocument:
#       Version: "2012-10-17"
#       Statement:
#         - Effect: Allow
#           Action:
#             - "events:PutRule"
#             - "events:PutTargets"
#             - "events:DeleteRule"
#             - "events:DescribeRule"
#             - "events:ListTagsForResource"
#             - "events:ListTargetsByRule"
#             - "events:RemoveTargets"
#             - "sns:CreateTopic"
#             - "sns:GetTopicAttributes"
#             - "sns:SetTopicAttributes"
#             - "sns:ListTagsForResource"
#             - "sns:DeleteTopic"
#           Resource:
#             - "*"
#     Roles:
#       - !Ref ADFTerraformRole
##
# End of Terraform resources
##
